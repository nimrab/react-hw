{"version":3,"sources":["p2-homeworks/h5/Header.module.css","p2-homeworks/h3/Greeting.module.css","p2-homeworks/h1/Message.module.css","p2-homeworks/h2/Affair.module.css","p2-homeworks/h2/Affairs.module.css","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.module.css","p2-homeworks/h4/HW4.module.css","p2-homeworks/h4/common/c2-SuperButton/SuperButton.module.css","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.module.css","p1-main/m1-ui/u1-app/App.module.css","p2-homeworks/h1/Message.tsx","p2-homeworks/h1/HW1.tsx","p2-homeworks/h2/Affair.tsx","p2-homeworks/h2/Affairs.tsx","p2-homeworks/h2/HW2.tsx","p2-homeworks/h3/Greeting.tsx","p2-homeworks/h3/GreetingContainer.tsx","p2-homeworks/h3/HW3.tsx","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.tsx","p2-homeworks/h4/common/c2-SuperButton/SuperButton.tsx","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.tsx","p2-homeworks/h4/HW4.tsx","p2-homeworks/h5/pages/PreJunior.tsx","p2-homeworks/h5/pages/Junior.tsx","p2-homeworks/h5/pages/JuniorPlus.tsx","p2-homeworks/h5/pages/Error404.tsx","p2-homeworks/h5/Routes.tsx","p2-homeworks/h5/Header.tsx","p2-homeworks/h5/HW5.tsx","p1-main/m1-ui/u1-app/App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","Message","props","className","css","main","round_div","src","avatar","alt","img","message_box","name","message","bubble_div","time","messageData","altMessage","HW1","Affair","priorityColorStyle","affair","priority","colorStyle","color","style","onClick","deleteAffairCallback","_id","btn","Affairs","mappedAffairs","data","map","el","key","setFilter","defaultAffairs","HW2","useState","affairs","setAffairs","filter","filteredAffairs","filterAffairs","deleteAffair","Greeting","setNameCallback","addUser","error","totalUsers","addUserByEnterCallback","inputClass","btnErrorClass","btn_err","throwError","empty_div","div_create","value","onChange","onKeyPress","input_css","user_qty","GreetingContainer","users","addUserCallback","setName","setError","nameTrimmed","trim","checkInputValue","alert","length","event","currentTarget","HW3","setUsers","newName","v1","SuperInputText","type","onChangeText","onEnter","spanClassName","restProps","finalSpanClassName","s","finalInputClassName","errorInput","superInput","e","SuperButton","red","finalClassName","default","SuperCheckbox","onChangeChecked","children","checked","checkbox","HW4","text","setText","showAlert","setChecked","column","testSpanError","blue","disabled","PreJunior","Junior","JuniorPlus","Error404","to","PATH","DEFAULT","PRE_JUNIOR","JUNIOR","JUNIOR_PLUS","Routes","path","exact","render","component","Header","nav_links_main","link_section","activeClassName","active","junior_link","junior_link_box","button","HW5","App","Boolean","window","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console"],"mappings":"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","file":"static/js/main.2cdf8a4a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav_links_main\":\"Header_nav_links_main__3gG3d\",\"link_section\":\"Header_link_section__3xDTt\",\"junior_link_box\":\"Header_junior_link_box__CVW4d\",\"junior_link\":\"Header_junior_link__3znNc\",\"button\":\"Header_button__3qLBw\",\"active\":\"Header_active__UVqQd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"error\":\"Greeting_error__xa3lY\",\"throwError\":\"Greeting_throwError__3Zbrr\",\"main\":\"Greeting_main__2TWGo\",\"btn\":\"Greeting_btn__3rG92\",\"btn_err\":\"Greeting_btn_err__2qH9e\",\"input_css\":\"Greeting_input_css__3vbJB\",\"div_create\":\"Greeting_div_create__vV09x\",\"empty_div\":\"Greeting_empty_div__G8KHL\",\"user_qty\":\"Greeting_user_qty__3C9sV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Message_main__3v6lU\",\"round_div\":\"Message_round_div__DZpxy\",\"img\":\"Message_img__2fi-H\",\"message_box\":\"Message_message_box__1Pcby\",\"name\":\"Message_name__2efdc\",\"message\":\"Message_message__gCXps\",\"time\":\"Message_time__1VSKs\",\"bubble_div\":\"Message_bubble_div__20W5v\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"affair\":\"Affair_affair__zxI7T\",\"name\":\"Affair_name__X_OsI\",\"priority\":\"Affair_priority__2YGiJ\",\"btn\":\"Affair_btn__2w--C\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"Affairs_btn__38rMl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"superInput\":\"SuperInputText_superInput__G3neq\",\"errorInput\":\"SuperInputText_errorInput__3PWAR\",\"error\":\"SuperInputText_error__1AbTl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"blue\":\"HW4_blue__8n5lA\",\"column\":\"HW4_column__2H4xu\",\"testSpanError\":\"HW4_testSpanError__3KgtO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"default\":\"SuperButton_default__2qv5j\",\"red\":\"SuperButton_red__3UGrw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkbox\":\"SuperCheckbox_checkbox__1-KLJ\",\"spanClassName\":\"SuperCheckbox_spanClassName__3ap0o\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__RKiBJ\"};","import React from 'react'\nimport {messageDataPropsType} from \"./HW1\"\nimport css from './Message.module.css'\n\nconst Message: React.FC<messageDataPropsType> = (props) => {\n    return (\n        <div className={css.main}>\n            <div className={css.round_div}><img src={props.avatar} alt=\"avatar\" className={css.img}/></div>\n            <div className={css.message_box}>\n\n                <div className={css.name}>{props.name}</div>\n                <div className={css.message}>{props.message}</div>\n\n                <div className={css.bubble_div}><span className={css.time}>{props.time}</span></div>\n\n            </div>\n\n        </div>\n    )\n}\n\nexport default Message\n","import React from 'react'\nimport Message from \"./Message\";\n\nexport type messageDataPropsType = {\n    avatar: string\n    name: string\n    message: string\n    time: string\n}\n\nconst messageData: messageDataPropsType = {\n    avatar: 'https://sun9-74.userapi.com/Ph-WiuOtF985il9AvN9JqiCWedmHtSGSSTXrSA/ltEB2Z2-YO4.jpg',\n    name: 'Vasya',\n    message: \"https://sun9-74.userapi.com/Ph-WiuOtF985il9AvN9JqiCWedmHtSGSSTXrSA/ltEB2Z2-YO4.jpghttps://sun9-74.userapi.com/Ph-WiuOtF985il9AvN9JqiCWedmHtSGSSTXrSA/ltEB2Z2-YO4.jpg\",\n    time: '22:00',\n}\n\nconst altMessage: messageDataPropsType = {\n    avatar: `https://icdn.lenta.ru/images/2020/04/23/16/20200423160206740/square_320_de8d86cd47467b7a80bbdf24ddb9cd9b.png`,\n    name: 'Cheb friend',\n    message: 'Погода сегодня хорошая',\n    time: '22:20'\n}\n\nfunction HW1() {\n    return (\n        <div>\n            <hr/>\n            homeworks 1\n\n            {/*should work (должно работать)*/}\n\n            <Message\n                avatar={messageData.avatar}\n                name={messageData.name}\n                message={messageData.message}\n                time={messageData.time}\n            />\n\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            <Message\n                avatar={altMessage.avatar}\n                name={altMessage.name}\n                message={altMessage.message}\n                time={altMessage.time}\n            />\n            <hr/>\n        </div>\n    )\n}\n\nexport default HW1\n","import React from 'react'\nimport css from './Affair.module.css'\nimport {AffairType} from \"./HW2\";\n\ntype AffairPropsType = {\n    // key не нужно типизировать\n    affair: AffairType // need to fix any\n    deleteAffairCallback: (_id: number) => void // need to fix any\n}\n\nfunction Affair(props: AffairPropsType) {\n    const deleteCallback = () => {\n    props.deleteAffairCallback(props.affair._id)\n    }// need to fix\n    let priorityColorStyle = '';\n    switch(props.affair.priority) {\n        case 'low':\n            priorityColorStyle = 'green';\n            break;\n        case 'middle':\n            priorityColorStyle = 'gold';\n            break;\n        case 'high':\n            priorityColorStyle = 'red';\n            break;\n    }\n    const colorStyle = {color: priorityColorStyle}\n\n\n\n    return (\n        <div className={css.affair}>\n            <div className={css.name}>{props.affair.name}</div>\n            <div className={css.priority} style={colorStyle}>[ {props.affair.priority} ]</div>\n            <button onClick={deleteCallback} className={css.btn}>X</button>\n        </div>\n    )\n}\n\n\nexport default Affair\n","import React from 'react'\nimport Affair from './Affair'\nimport {AffairType, FilterType} from './HW2'\nimport css from './Affairs.module.css'\n\ntype AffairsPropsType = { // need to fix any\n    data: Array<AffairType>\n    setFilter: (filter: FilterType) => void\n    deleteAffairCallback: (_id: number) => void\n}\n\nfunction Affairs(props: AffairsPropsType) {\n    const mappedAffairs = props.data.map((el: AffairType) => (\n        <Affair // should work\n            key={el._id} // кеи ОБЯЗАТЕЛЬНЫ в 99% - так что лучше их писать всегда при создании компонент в мапе\n            affair={el}\n            deleteAffairCallback={props.deleteAffairCallback}\n        />\n    ))\n\n    const setAll = () => {props.setFilter('all')} // need to fix\n    const setHigh = () => {props.setFilter('high')} //могу передать текстом?\n    const setMiddle = () => {props.setFilter('middle')}\n    const setLow = () => {props.setFilter('low')}\n\n    return (\n        <div>\n\n            {mappedAffairs}\n\n            <button onClick={setAll} className={css.btn}>All</button>\n            <button onClick={setHigh} className={css.btn}>High</button>\n            <button onClick={setMiddle} className={css.btn}>Middle</button>\n            <button onClick={setLow} className={css.btn}>Low</button>\n        </div>\n    )\n}\n\nexport default Affairs\n","import React, {useState} from 'react'\nimport Affairs from './Affairs'\n\n\n// types\nexport type AffairPriorityType = 'high' | 'middle' | 'low'// need to fix any\nexport type AffairType = {\n    _id: number\n    name: string\n    priority: AffairPriorityType\n} // need to fix any\nexport type FilterType = 'all' | AffairPriorityType\n\n// constants\nconst defaultAffairs:Array<AffairType> = [ // need to fix any\n    {_id: 1, name: 'React', priority: 'high'},\n    {_id: 2, name: 'Anime', priority: 'low'},\n    {_id: 3, name: 'Games', priority: 'low'},\n    {_id: 4, name: 'Work', priority: 'high'},\n    {_id: 5, name: 'HTML & CSS', priority: 'middle'},\n]\n\n// pure helper functions\nexport const filterAffairs = (affairs:Array<AffairType>, filter: FilterType): Array<AffairType> => { // need to fix any\n    if (filter === 'all') return affairs\n    else return affairs.filter(el => el.priority === filter)// need to fix\n}\n\nexport const deleteAffair = (affairs: Array<AffairType>, _id: number): Array<AffairType> => { // need to fix any\n    return affairs.filter(el => el._id !== _id)\n    // need to fix\n}\n\nfunction HW2() { //компонента, в которой уже передаем функциям реальные данные\n    const [affairs, setAffairs] = useState<Array<AffairType>>(defaultAffairs) // need to fix any\n    const [filter, setFilter] = useState<FilterType>('all')\n\n    const filteredAffairs = filterAffairs(affairs, filter)\n    const deleteAffairCallback = (_id: number) => setAffairs(deleteAffair(affairs, _id)) // need to fix any\n\n    return (\n        <div>\n            <hr/>\n            homeworks 2\n\n            {/*should work (должно работать)*/}\n            <Affairs\n                data={filteredAffairs}\n                setFilter={setFilter}\n                deleteAffairCallback={deleteAffairCallback}\n            />\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeAffairs/>*/}\n            <hr/>\n        </div>\n    )\n}\n\nexport default HW2\n","import React, {ChangeEvent, KeyboardEvent} from 'react'\nimport css from './Greeting.module.css'\n\ntype GreetingPropsType = {\n    name: string // need to fix any\n    setNameCallback: (event: ChangeEvent<HTMLInputElement>) => void// need to fix any\n    addUser: () => void // need to fix any\n    error: boolean // need to fix any\n    totalUsers: number // need to fix any\n    addUserByEnterCallback: (event: KeyboardEvent<HTMLInputElement>) => void\n}\n\n// презентационная компонента (для верстальщика)\nexport const Greeting: React.FC<GreetingPropsType> = (\n    {name, setNameCallback, addUser, error, totalUsers, addUserByEnterCallback} // деструктуризация пропсов\n) => {\n    const inputClass = error ? css.error : \"\" // need to fix with (?:)\n    const btnErrorClass = error ? css.btn_err : \"\"\n\n    const throwError = error\n        ? <div className={css.throwError}>Invalid name</div>\n        : <div className={css.empty_div}></div>\n\n    return (\n        <div className={css.main}>\n            <div className={css.div_create}>Create new user:</div>\n            <input\n                value={name}\n                onChange={setNameCallback}\n                onKeyPress={addUserByEnterCallback}\n                className={inputClass + ' ' + css.input_css}\n            />\n            <button onClick={addUser} className={css.btn + ' ' + btnErrorClass}>add</button>\n            <span className={css.user_qty}>( User QTY: {totalUsers} )</span>\n            {throwError}\n        </div>\n    )\n}\n\n","import React, {ChangeEvent,KeyboardEvent, useState} from 'react'\nimport {Greeting} from './Greeting'\nimport {UserType} from \"./HW3\";\n\ntype GreetingContainerPropsType = {\n    users: Array<UserType> // need to fix any\n    addUserCallback: (name: string) => void // need to fix any\n}\n\n// более простой и понятный для новичков\n// function GreetingContainer(props: GreetingPropsType) {\n\n// более современный и удобный для про :)\n// уровень локальной логики\nexport const GreetingContainer: React.FC<GreetingContainerPropsType> = ({users, addUserCallback}) => { // деструктуризация пропсов\n    const [name, setName] = useState<string>('') // need to fix any\n    const [error, setError] = useState<boolean>(false) // need to fix any\n\n    const setNameCallback = (event: ChangeEvent<HTMLInputElement>) => { // need to fix any\n        setError(false)\n        setName(event.currentTarget.value) // need to fix\n    }\n    const addUser = () => {\n        const nameTrimmed = name.trim()\n        if (checkInputValue(nameTrimmed)) {\n            alert(`Hello ${nameTrimmed} !`) // need to fix\n            addUserCallback(nameTrimmed)\n            setName(\"\")\n        } else {\n            setError(true)\n            setName(\"\")\n        }\n    }\n\n    const addUserByEnter = (event: KeyboardEvent<HTMLInputElement>) => {\n        if (event.key === 'Enter') {\n            addUser()\n        }\n\n    }\n\n    const checkInputValue = (value: string) => {\n        return !!value\n    }\n\n\n    const totalUsers = users.length // need to fix\n\n    return (\n        <Greeting\n            name={name}\n            setNameCallback={setNameCallback}\n            addUser={addUser}\n            addUserByEnterCallback={addUserByEnter}\n            error={error}\n            totalUsers={totalUsers}\n        />\n    )\n}\n\n","import React, {useState} from 'react'\nimport {GreetingContainer} from './GreetingContainer'\nimport {v1} from 'uuid'\n\n\n// types\nexport type UserType = {\n    _id: string // need to fix any\n    name: string // need to fix any\n}\n\n// уровень работы с глобальными данными\nfunction HW3() {\n    const [users, setUsers] = useState<Array<UserType>>([]) // need to fix any\n\n    const addUserCallback = (name: string) => { // need to fix any\n        const newName = {_id: v1(), name: name}\n        setUsers([...users, newName]) // need to fix\n    }\n\n    return (\n        <div>\n            <hr/>\n            homeworks 3\n\n            {/*should work (должно работать)*/}\n            {/*{console.log(users)}*/}\n            <GreetingContainer users={users} addUserCallback={addUserCallback}/>\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeGreeting/>*/}\n            <hr/>\n        </div>\n    )\n}\n\nexport default HW3\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent} from 'react'\nimport s from './SuperInputText.module.css'\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\n\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\ntype SuperInputTextPropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\n    onChangeText?: (value: string) => void\n    onEnter?: () => void\n    error?: string\n    spanClassName?: string\n}\n\nconst SuperInputText: React.FC<SuperInputTextPropsType> = (\n    {\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\n        onChange, onChangeText,\n        onKeyPress, onEnter,\n        error,\n        className, spanClassName,\n\n        ...restProps// все остальные пропсы попадут в объект restProps\n    }\n) => {\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        onChange // если есть пропс onChange\n        && onChange(e) // то передать ему е (поскольку onChange не обязателен)\n\n        onChangeText && onChangeText(e.currentTarget.value)\n    }\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\n        onKeyPress && onKeyPress(e);\n\n        onEnter // если есть пропс onEnter\n        && e.key === 'Enter' // и если нажата кнопка Enter\n        && onEnter() // то вызвать его\n    }\n\n    const finalSpanClassName = `${s.error} ${spanClassName ? spanClassName : ''}`\n    const finalInputClassName = `${error ? s.errorInput : ''} ${s.superInput} ${className}` // need to fix with (?:) and s.superInput\n\n    return (\n        <>\n            <input\n                type={'text'}\n                onChange={onChangeCallback}\n                onKeyPress={onKeyPressCallback}\n                className={finalInputClassName}\n\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\n            />\n            {error && <span className={finalSpanClassName}>{error}</span>}\n        </>\n    )\n}\n\nexport default SuperInputText\n","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from 'react'\nimport s from './SuperButton.module.css'\n\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>\n\ntype SuperButtonPropsType = DefaultButtonPropsType & {\n    red?: boolean\n}\n\nconst SuperButton: React.FC<SuperButtonPropsType> = (\n    {\n        red, className,\n        ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\n    }\n) => {\n    const finalClassName = `${red ? s.red : s.default} ${className}`\n\n    return (\n        <button\n            className={finalClassName}\n            {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\n        />\n    )\n}\n\nexport default SuperButton\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from 'react'\nimport s from './SuperCheckbox.module.css'\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\n\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\n    onChangeChecked?: (checked: boolean) => void\n    spanClassName?: string\n}\n\nconst SuperCheckbox: React.FC<SuperCheckboxPropsType> = (\n    {\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\n        onChange, onChangeChecked,\n        className, spanClassName,\n        children,\n        checked,// в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\n\n        ...restProps// все остальные пропсы попадут в объект restProps\n    }\n) => {\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        // сделайте так чтоб работал onChange и onChangeChecked\n        onChange &&\n            onChange(e)\n\n        onChangeChecked &&\n            onChangeChecked(e.currentTarget.checked)\n    }\n\n    const finalInputClassName = `${s.checkbox} ${className ? className : ''}`\n\n    return (\n        <label>\n            <input\n                type={'checkbox'}\n                onChange={onChangeCallback}\n                className={finalInputClassName}\n                checked={checked}\n\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (checked например там внутри)\n            />\n            {children && <span className={s.spanClassName}>{children}</span>}\n        </label> // благодаря label нажатие на спан передастся в инпут\n    )\n}\n\nexport default SuperCheckbox\n","import React, {ChangeEvent, useState} from 'react'\nimport SuperInputText from './common/c1-SuperInputText/SuperInputText'\nimport s from './HW4.module.css'\nimport SuperButton from './common/c2-SuperButton/SuperButton'\nimport SuperCheckbox from './common/c3-SuperCheckbox/SuperCheckbox'\n\nfunction HW4() {\n    const [text, setText] = useState<string>('')\n    const error = text ? '' : 'error'\n\n    const showAlert = () => {\n        if (error) {\n            alert('введите текст...')\n        } else {\n            alert(text) // если нет ошибки показать текст\n        }\n    }\n\n    const [checked, setChecked] = useState<boolean>(true)\n    const testOnChange = (e: ChangeEvent<HTMLInputElement>) => setChecked(e.currentTarget.checked)\n\n    return (\n        <div>\n            <hr/>\n            homeworks 4\n\n            <div className={s.column}>\n                <SuperInputText\n                    value={text}\n                    onChangeText={setText}\n                    onEnter={showAlert}\n                    error={error}\n                    spanClassName={s.testSpanError}\n                />\n\n                <SuperInputText\n                    className={s.blue} // проверьте, рабоет ли смешивание классов\n                />\n\n                {/*----------------------------------------------------*/}\n\n                <SuperButton>\n                    default\n                </SuperButton>\n\n                <SuperButton\n                    red // пропсу с булевым значением не обязательно указывать true\n                    onClick={showAlert}\n                >\n                    delete {/*// название кнопки попадёт в children*/}\n                </SuperButton>\n\n                <SuperButton disabled>\n                    disabled\n                </SuperButton>\n\n                {/*----------------------------------------------------*/}\n\n                <SuperCheckbox\n                    checked={checked}\n                    onChangeChecked={setChecked}\n                >\n                    some text {/*// этот текст попадёт в children*/}\n                </SuperCheckbox>\n\n                {/*// onChange тоже должен работать*/}\n                <SuperCheckbox checked={checked} onChange={testOnChange}/>\n            </div>\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeSuperInputText/>*/}\n            {/*<AlternativeSuperButton/>*/}\n            {/*<AlternativeSuperCheckbox/>*/}\n            <hr/>\n        </div>\n    )\n}\n\nexport default HW4\n","import React from 'react'\nimport HW1 from '../../h1/HW1'\nimport HW2 from '../../h2/HW2'\nimport HW3 from '../../h3/HW3'\nimport HW4 from '../../h4/HW4'\n\nfunction PreJunior() {\n    return (\n        <div>\n            <HW1/>\n            <HW2/>\n            <HW3/>\n            <HW4/>\n            {/*<HW6/>*/}\n\n        </div>\n    )\n}\n\nexport default PreJunior\n\n// сделайте по аналогии пустые страницы джун и джун+\n// туда будут добавляться следующие дз","import React from \"react\";\r\n\r\n\r\nexport const Junior = () => {\r\n\r\n    return (\r\n        <div>Hello! This is Junior tasks</div>\r\n\r\n    )\r\n\r\n}","import React from \"react\";\r\n\r\n\r\nexport const JuniorPlus = () => {\r\n\r\n    return (\r\n        <div>Hello! This is JuniorPlus tasks</div>\r\n\r\n    )\r\n\r\n}","import React from 'react'\nimport {PATH} from \"../Routes\";\nimport {NavLink} from \"react-router-dom\";\n\nfunction Error404() {\n    return (\n        <div>\n            <div>404</div>\n            <div>Page not found!</div>\n            <div>—ฅ/ᐠ.̫ .ᐟ\\ฅ—</div>\n            <NavLink to={PATH.DEFAULT}>Main Page</NavLink>\n        </div>\n    )\n}\n\nexport default Error404\n","import React from 'react'\nimport PreJunior from \"./pages/PreJunior\";\nimport {Junior} from \"./pages/Junior\";\nimport {JuniorPlus} from \"./pages/JuniorPlus\";\nimport {Route, Switch, Redirect} from \"react-router-dom\";\nimport Error404 from \"./pages/Error404\";\n\nexport const PATH = {\n    PRE_JUNIOR: '/pre-junior',\n    JUNIOR: '/junior',\n    JUNIOR_PLUS: '/junior-plus',\n    DEFAULT: '/react_tasks',\n    // add paths\n}\n\nfunction Routes() {\n    return (\n        <div>\n            {/*Switch выбирает первый подходящий роут*/}\n\n            {/*в начале мы попадаем на страницу '/' и переходим сразу на страницу PRE_JUNIOR*/}\n            {/*exact нужен чтоб указать полное совподение (что после '/' ничего не будет)*/}\n            {/*<Route path={'/'} exact render={() => <Redirect to={PATH.PRE_JUNIOR}/>}/>*/}\n\n            <Switch>\n                <Route path={PATH.DEFAULT} exact render={() => <Redirect to={PATH.PRE_JUNIOR}/>}/>\n                <Route path={PATH.PRE_JUNIOR} exact component={PreJunior}/>\n                <Route path={PATH.JUNIOR} exact component={Junior}/>\n                <Route path={PATH.JUNIOR_PLUS} exact component={JuniorPlus}/>\n                <Route render={()=> <Error404/>}/>\n            </Switch>\n\n\n            {/*<Route path={PATH.PRE_JUNIOR} render={() => <PreJunior/>}/>*/\n            }\n\n\n            {/*у этого роута нет пути, он отрисуется если пользователь захочет попасть на несуществующую страницу*/\n            }\n            {/*<Route render={() => <Error404/>}/>*/\n            }\n\n        </div>\n    )\n}\n\nexport default Routes\n","import React from 'react'\nimport css from './Header.module.css'\nimport {PATH} from \"./Routes\";\nimport {NavLink} from \"react-router-dom\";\n\nexport const Header = () => {\n    return (\n        <div className={css.nav_links_main}>\n\n            <section className={css.link_section}>\n\n\n                <NavLink to={PATH.PRE_JUNIOR} activeClassName={css.active} className={css.junior_link}>\n                    <div className={css.junior_link_box}>\n                        Pre-Junior\n                    </div>\n                </NavLink>\n\n\n                <NavLink to={PATH.JUNIOR} activeClassName={css.active} className={css.junior_link}>\n                    <div className={css.junior_link_box}>\n                        Junior\n                    </div>\n                </NavLink>\n\n\n                <NavLink to={PATH.JUNIOR_PLUS} activeClassName={css.active} className={css.junior_link}>\n                    <div className={css.junior_link_box}>\n                        JuniorPlus\n                    </div>\n                </NavLink>\n\n                <div className={css.button}>Slide me</div>\n            </section>\n\n\n        </div>\n    )\n}\n\n","import React from 'react'\nimport Routes from \"./Routes\";\nimport {BrowserRouter, HashRouter} from \"react-router-dom\";\nimport {Header} from \"./Header\";\n\nfunction HW5() {\n    return (\n        <div>\n            {/*в gh-pages лучше работает HashRouter*/}\n            <HashRouter>\n\n            {/*<BrowserRouter>*/}\n\n                <Header/>\n\n                <Routes/>\n\n            {/*</BrowserRouter>*/}\n\n            </HashRouter>\n        </div>\n    )\n}\n\nexport default HW5\n","import React from 'react'\nimport s from './App.module.css'\nimport HW1 from '../../../p2-homeworks/h1/HW1'\nimport HW2 from \"../../../p2-homeworks/h2/HW2\";\nimport HW3 from \"../../../p2-homeworks/h3/HW3\";\nimport HW4 from \"../../../p2-homeworks/h4/HW4\";\nimport HW5 from \"../../../p2-homeworks/h5/HW5\";\n\nfunction App() {\n    return (\n            <div className={s.App}>\n                <div>react homeworks:</div>\n                {/*<HW1/>*/}\n                {/*<HW2/>*/}\n                {/*<HW3/>*/}\n                {/*<HW4/>*/}\n                <HW5/>\n\n            </div>\n    )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\ntype Config = {\n    onSuccess?: (registration: ServiceWorkerRegistration) => void\n    onUpdate?: (registration: ServiceWorkerRegistration) => void\n}\n\nexport function register(config?: Config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(\n            process.env.PUBLIC_URL,\n            window.location.href\n        )\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config)\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        'This web app is being served cache-first by a service ' +\n                        'worker. To learn more, visit https://bit.ly/CRA-PWA'\n                    )\n                })\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config)\n            }\n        })\n    }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing\n                if (installingWorker == null) {\n                    return\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                'New content is available and will be used when all ' +\n                                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n                            )\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration)\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log('Content is cached for offline use.')\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration)\n                            }\n                        }\n                    }\n                }\n            }\n        })\n        .catch(error => {\n            console.error('Error during service worker registration:', error)\n        });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl, {\n        headers: {'Service-Worker': 'script'}\n    })\n        .then(response => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get('content-type')\n            if (\n                response.status === 404 ||\n                (contentType != null && contentType.indexOf('javascript') === -1)\n            ) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then(registration => {\n                    registration.unregister().then(() => {\n                        window.location.reload()\n                    })\n                })\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config)\n            }\n        })\n        .catch(() => {\n            console.log(\n                'No internet connection found. App is running in offline mode.'\n            )\n        })\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready\n            .then(registration => {\n                registration.unregister()\n            })\n            .catch(error => {\n                console.error(error.message)\n            })\n    }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './p1-main/m1-ui/u1-app/App'\nimport * as serviceWorker from './serviceWorker'\nimport {BrowserRouter} from \"react-router-dom\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <App/>\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}